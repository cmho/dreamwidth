layerinfo type = "layout";
layerinfo name = "Timeline";
layerinfo redist_uniq = "timeline/layout";
layerinfo author_name = "veryroundbird";
layerinfo lang = "en";


set layout_authors = [ { "name" => "veryroundbird", "type" => "user" } ];

##===============================
## Presentation
##===============================

propgroup presentation {

    property use num_items_recent;
    property use num_items_reading;
    property use use_custom_friend_colors;
    property use use_shared_pic;
    property use use_journalstyle_entry_page;

    property use margins_size;
    property use margins_unit;
    property use medium_breakpoint_width;
    property use large_breakpoint_width;

    property string primary_width_size {
        des = "Set the width of the entries";
        size = 3;
    }

    property string primary_width_units{
        des = "Units for entry width";
        values = "%|%|px|px";
    }

    property use custom_control_strip_colors;

    property use reverse_sortorder_group;
    property use reg_firstdayofweek;
    property use tags_page_type;
    property use num_items_icons;
    property use icons_page_sort;

    property use all_entrysubjects;
    property use all_commentsubjects;
    property use entry_datetime_format_group;
    property use comment_datetime_format_group;
    property use userpics_style_group;

    property string entry_comment_text_align {
    des = "Set the text alignment in entries and comments";
    values = "left|Left|justify|Justify";
    }

    property use entry_metadata_position;

    property bool metadata_label_images{
    des = "Display the metadata labels as images";
    }

    property use userlite_interaction_links;
    property use entry_management_links;
    property use comment_management_links;

    property bool topnav_show {
    des = "Display the top navigation links";
    }

    property bool page_top_image {
    des = "Display the 'Top of page' link as an image";
    }

}

set layout_type = "one-column-split";
set sidebar_width = "10em";
set userpics_position = "left";
set use_custom_friend_colors = false;
set custom_foreground_element = "postername";
set custom_background_element = "entry_border";
set primary_width_size ="600";
set primary_width_units ="px";
set entry_management_links = "text";
set comment_management_links = "text";
set userlite_interaction_links = "text";
set custom_control_strip_colors = "on_no_gradient";
set tags_page_type = "list";
set page_top_image = true;
set metadata_label_images = true;
set entry_userpic_style = "small";
set comment_userpic_style = "small";
set entry_comment_text_align = "left";
set all_commentsubjects = true;
set topnav_show = false;

##===============================
## Colors
##===============================

propgroup colors {

    property Color color_canvas_background { des = "Main background color"; }
    property Color color_topbar_background { des = "Topbar (main module section) background color"; }
    property Color color_bottombar_background { des = "Bottombar (secondary module section) background color"; }
    property Color color_topbar_border_top { des = "Topbar border-top color"; }
    property Color color_topbar_border_bottom { des = "Topbar border-bottom color"; }
    property Color color_bottombar_border_top { des = "Bottombar border color"; }

    property Color color_entry_shadow { des = "Entry shadow color"; }
    property Color color_entry_datetime_text {des = "Entry date and time color";}
    property Color color_metadata_text {des = "Metadata color";}

    property Color color_module_tag_link {des = "Main module section tags link color";}
    property Color color_module_tag_link_visited {des = "Main module section tags visited link color";}
    property Color color_module_tag_link_hover {des = "Main module section tags hover link color";}
    property Color color_module_tag_link_active {des = "Main module section tags active link color";}

    property use color_page_background;
    property use color_page_text;
    property use color_page_link;
    property use color_page_link_active;
    property use color_page_link_hover;
    property use color_page_link_visited;
    property use color_page_border;

    property use color_module_background;
    property use color_module_text;
    property use color_module_link;
    property use color_module_link_active;
    property use color_module_link_hover;
    property use color_module_link_visited;
    property use color_module_title_background;
    property use color_module_title;
    property use color_module_border;

    property use color_page_title;

    property use color_footer_link;
    property use color_footer_link_active;
    property use color_footer_link_hover;
    property use color_footer_link_visited;

    property use color_entry_background;
    property use color_entry_text;
    property use color_entry_link;
    property use color_entry_link_active;
    property use color_entry_link_hover;
    property use color_entry_link_visited;
    property use color_entry_title_background;
    property use color_entry_title;
    property use color_entry_interaction_links;
    property use color_entry_interaction_links_active;
    property use color_entry_interaction_links_hover;
    property use color_entry_interaction_links_visited;
    property use color_entry_border;

    property use color_comment_title_background;
    property use color_comment_title;

    property use control_strip_bgcolor;
    property use control_strip_fgcolor;
    property use control_strip_linkcolor;
    property use control_strip_bordercolor;

}

##===============================
## Fonts
##===============================

propgroup fonts {

    property string font_journal_pagetitle {
        des = "Preferred font for page title";
        maxlength = 50;
        size = 25;
        note = "For example: Arial or \"Times New Roman\". Leave blank to use the default.";
        }

    property string font_journal_pagetitle_size {
        des = "Size of page title font";
        size = 3;
    }

    property string font_journal_pagetitle_units{
        des = "Units for page title font size ";
        values = "em|em|%|%|px|px";
    }

    property string font_entry_datetime {
        des = "Preferred font for entry date and time";
        maxlength = 50;
        size = 25;
        note = "For example: Arial or \"Times New Roman\". Leave blank to use the default.";
        }

    property string font_entry_datetime_size {
        des = "Size of date and time font";
        size = 3;
    }

    property string font_entry_datetime_units{
        des = "Units for entry date and time size ";
        values = "em|em|%|%|px|px";
    }

    property string font_entry_management {
        des = "Preferred font for entry management, interaction and navigation links";
        maxlength = 50;
        size = 25;
        note = "For example: Arial or \"Times New Roman\". Leave blank to use the default.";
    }

    property string font_entry_management_size {
        des = "Size of entry management, interaction and page navigation font";
        size = 3;
    }

    property string font_entry_management_units{
        des = "Units for entry management, interaction and page navigation size ";
        values = "em|em|%|%|px|px";
    }

    property string font_module_management {
        des = "Preferred font for module management and user interaction links";
        maxlength = 50;
        size = 25;
        note = "For example: Arial or \"Times New Roman\". Leave blank to use the default.";
    }

    property string font_module_management_size {
        des = "Size of module management and user interaction font";
        size = 3;
    }

    property string font_module_management_units{
        des = "Units for module management and user interaction size ";
        values = "em|em|%|%|px|px";
    }

    property string font_navigation {
        des = "Preferred font for the navigation module";
        maxlength = 50;
        size = 25;
        note = "For example: Arial or \"Times New Roman\". Leave blank to use the default.";
        }

    property string font_navigation_size {
        des = "Size of navigation font";
        size = 3;
    }

    property string font_navigation_units{
        des = "Units for navigation size ";
        values = "em|em|%|%|px|px";
    }

    property string font_linkslist {
        des = "Preferred font for the links list";
        maxlength = 50;
        size = 25;
        note = "For example: Arial or \"Times New Roman\". Leave blank to use the default.";
        }

    property string font_linkslist_size {
        des = "Size of links list font";
        size = 3;
    }

    property string font_linkslist_units{
        des = "Units for links list size ";
        values = "em|em|%|%|px|px";
    }

    property use font_base;
    property use font_fallback;
    property use font_base_size;
    property use font_base_units;
    property use font_module_heading;
    property use font_module_heading_size;
    property use font_module_heading_units;
    property use font_module_text;
    property use font_module_text_size;
    property use font_module_text_units;
    property use font_journal_title;
    property use font_journal_title_size;
    property use font_journal_title_units;
    property use font_journal_subtitle;
    property use font_journal_subtitle_size;
    property use font_journal_subtitle_units;
    property use font_entry_title;
    property use font_entry_title_size;
    property use font_entry_title_units;
    property use font_comment_title;
    property use font_comment_title_size;
    property use font_comment_title_units;
    property use font_sources;
}

set font_sources = "https://fonts.googleapis.com/css?family=Lato:300,400,700,900";

set font_base = "Lato, sans-serif";
set font_fallback = "sans-serif";
set font_base_size = "1";
set font_base_units = "em";

set font_journal_title_size = "1.25";
set font_journal_title_units = "em";

set font_journal_subtitle_size = "1";
set font_journal_subtitle_units = "em";

set font_journal_pagetitle_size = "1";
set font_journal_pagetitle_units = "em";

set font_entry_title_size = "1";
set font_entry_title_units = "em";

set font_entry_datetime_size = "1";
set font_entry_datetime_units = "em";

set font_comment_title_size = "1";
set font_comment_title_units = "em";

set font_module_heading_size = "1";
set font_module_heading_units = "em";

set font_entry_management = "sans-serif";
set font_entry_management_size = ".75";
set font_entry_management_units = "em";

set font_module_management = "sans-serif";
set font_module_management_size = ".625";
set font_module_management_units = "em";

set font_navigation_size = "1";
set font_navigation_units = "em";

set font_linkslist_size = "1";
set font_linkslist_units = "em";

##===============================
## Images
##===============================

propgroup images {

    property string[] image_background_canvas_group {
        des = "Main background image";
        grouptype = "image";
}
    set image_background_canvas_group = [ "image_background_canvas_url", "image_background_canvas_repeat", "image_background_canvas_position" ];
    property string image_background_canvas_url {
        grouped = 1;
}
    property string image_background_canvas_repeat {
        values = "repeat|tile image|no-repeat|don't tile|repeat-x|tile horizontally|repeat-y|tile vertically";
        grouped = 1;
}
    property string image_background_canvas_position {
        values = "top left|top left|top center|top center|top right|top right|center left|center left|center center|center|center right|center right|bottom left|bottom left|bottom center|bottom center|bottom right|bottom right";
        grouped = 1;
        allow_other = 1;
}

    property string[] image_background_entry_header_group {
        des = "Entry header background image";
        grouptype = "image";
        }
    set image_background_entry_header_group = [ "image_background_entry_header_url", "image_background_entry_header_repeat", "image_background_entry_header_position" ];
    property string image_background_entry_header_url {
        grouped = 1;
        }
    property string image_background_entry_header_repeat {
        values = "repeat|tile image|no-repeat|no tile|repeat-x|tile horizontally|repeat-y|tile vertically";
        grouped = 1;
        }
    property string image_background_entry_header_position {
        values = "top left|top left|top center|top center|top right|top right|center left|center left|center center|center|center right|center right|bottom left|bottom left|bottom center|bottom center|bottom right|bottom right|cover";
        grouped = 1;
        allow_other = 1;
}

    property string image_metadata_mood {
        des = "Icon for 'Current mood'";
}

    property string image_metadata_location {
        des = "Icon for 'Current location'";
}

    property string image_metadata_music {
        des = "Icon for 'Current music'";
}

    property string image_metadata_groups {
        des = "Icon for 'Custom access filters'";
}

    property string image_metadata_xpost {
        des = "Icon for 'Crosspost'";
}

    property string image_entry_tag {
        des = "Icon for entry tags";
}

    property string image_list_bullet {
        des = "Custom list bullet";
}

    property string image_module_list_bullet {
        des = "Custom list bullet for modules";
}

    property string image_page_top {
        des = "Image for the 'Top of page' link";
}

    property use image_background_page_group;
    property use image_background_module_group;
    property use image_background_header_group;
    property use image_background_header_height;
    property use image_background_entry_group;
}

##===============================
## Modules
##===============================

propgroup modules {

    property string module_time_section_override {
       values = "none|(none)|footer|Footer";
       grouped = 1;
       }
    property string module_poweredby_section_override {
       values = "none|(none)|footer|Footer";
       grouped = 1;
       }
    property string module_pagesummary_section_override {
       values = "none|(none)|two|Secondary Module Section";
       grouped = 1;
       }
    property string module_active_section_override {
       values = "none|(none)|two|Secondary Module Section";
       grouped = 1;
       }
    property string module_subscriptionfilters_section_override {
       values = "none|(none)|two|Secondary Module Section";
       grouped = 1;
       }
    property string module_syndicate_section_override {
       values = "none|(none)|two|Secondary Module Section";
       grouped = 1;
       }
    property string module_cuttagcontrols_section_override {
       values = "none|(none)|two|Secondary Module Section";
       grouped = 1;
       }
    property string module_search_section_override {
       values = "none|(none)|two|Secondary Module Section";
       grouped = 1;
       }
    property string module_credit_section_override {
       values = "none|(none)|two|Secondary Module Section";
       grouped = 1;
       }

    property use module_userprofile_group;
    property use module_calendar_group;
    property use module_navlinks_group;
    property use module_links_group;
    property use module_customtext_group;
    property use module_tags_group;
    property use module_pagesummary_group;
    property use module_active_group;
    property use module_subscriptionfilters_group;
    property use module_syndicate_group;
    property use module_cuttagcontrols_group;
    property use module_search_group;
    property use module_credit_group;
    property use module_time_group;
    property use module_poweredby_group;

}

# Explicitly define what sections the layout has available
set module_layout_sections = "none|(none)|one|Main Module Section|two|Secondary Module Section";

set grouped_property_override = {

        "module_time_section" => "module_time_section_override",
        "module_poweredby_section" => "module_poweredby_section_override",
        "module_pagesummary_section" => "module_pagesummary_section_override",
        "module_active_section" => "module_active_section_override",
        "module_subscriptionfilters_section" => "module_subscriptionfilters_section_override",
        "module_syndicate_section" => "module_syndicate_section_override",
        "module_cuttagcontrols_section" => "module_cuttagcontrols_section_override",
        "module_search_section" => "module_search_section_override",
        "module_credit_section" => "module_credit_section_override"
    };

set module_tags_opts_limit = 15;
set module_tags_opts_type = "cloud";
set module_customtext_show = true;

set module_pagesummary_section = "two";
set module_syndicate_section = "two";
set module_cuttagcontrols_section = "two";
set module_active_section = "two";
set module_subscriptionfilters_section = "two";
set module_search_section = "two";
set module_credit_section = "two";

set module_time_section = "footer";
set module_poweredby_section = "footer";

set module_calendar_order = 2;
set module_navlinks_order = 3;
set module_customtext_order = 5;
set module_syndicate_order = 10;
set module_cuttagcontrols_order = 11;
set module_search_order = 12;
set module_credit_order = 13;
set module_time_order = 14;
set module_poweredby_order = 15;

set module_subscriptionfilters_show = true;
set module_subscriptionfilters_order = 9;

##===============================
## Text
##===============================

propgroup text {

    property use text_module_customtext_content;
    property use text_module_pagesummary;
    property use text_module_active_entries;
    property use text_module_subscriptionfilters;
    property use text_module_syndicate;
    property use text_module_cuttagcontrols;
    property use text_module_search;
    property use text_module_credit;

    property use text_view_recent;
    property use text_view_archive;
    property use text_view_friends;
    property use text_view_friends_comm;
    property use text_view_network;
    property use text_view_tags;
    property use text_view_memories;
    property use text_view_userinfo;

    property use text_entry_prev;
    property use text_entry_next;
    property use text_edit_entry;
    property use text_edit_tags;
    property use text_mem_add;
    property use text_tell_friend;
    property use text_watch_comments;
    property use text_unwatch_comments;

    property use text_read_comments;
    property use text_read_comments_friends;
    property use text_read_comments_screened_visible;
    property use text_read_comments_screened;
    property use text_post_comment;
    property use text_post_comment_friends;
    property use text_permalink;

    property use text_meta_location;
    property use text_meta_mood;
    property use text_meta_music;
    property use text_meta_xpost;
    property use text_tags;

    property use text_stickyentry_subject;

    property use text_max_comments;
    property use text_skiplinks_back;
    property use text_skiplinks_forward;

}

##===============================
##Layout
##===============================

function Page::print() {
    $*image_page_top = generate_image_url($*image_page_top);

    """<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">\n<head profile="http://www.w3.org/2006/03/hcard http://purl.org/uF/hAtom/0.1/ http://gmpg.org/xfn/11">\n""";
    $this->print_meta_tags();
    $this->print_head();
    $this->print_stylesheets();
    $this->print_head_title();
    """</head>""";
    $this->print_wrapper_start();
    $this->print_control_strip();
    """
    <div id="canvas">
        <div class="inner">
            <div id="header">
                <div class="inner">
                    """;
                    $this->print_global_title();
                    $this->print_global_subtitle();
                    $this->print_title();

    """
                </div><!-- end header>inner -->
            </div><!-- end header -->
            <div id="content">
                <div class="inner">
    """;
    """
                    <div id="secondary"><div class="inner">
    """;
                        $this->print_module_section("one");
    """
                    </div></div><!--  end secondary and secondary>inner -->
    """;
    """
                    <div id="primary"><div class="inner">
    """;
                        $this->print_body();
    """
                    </div></div><!-- end primary and primary>inner -->
    """;

    """
                    <div id="invisible-separator" style="float: left; width: 1px;"></div> <!-- this is a hack for IE7 + two-columns-right -->
                    <div id="tertiary"><div class="inner">
                        """;
                        $this->print_module_section("two");
    """
                    </div></div><!-- end tertiary and tertiary>inner -->
                    <div id="content-footer"></div>
                </div><!-- end content>inner -->
            </div> <!-- end content -->
        </div> <!-- end canvas>inner -->
    """;

    """
    <div id="footer">
        <div class="inner">
            """;

            $this->print_module_section("footer");

            print safe """
                <div class="page-top"><a href="#">""";
                    if ($*page_top_image) {
                        print safe """
                        <img title="$*text_page_top" alt="$*text_page_top" src="$*image_page_top">""";
                    }
                    else{
                        print safe $*text_page_top;
                    }"""
                    </a>
                </div>
            """;
    """
        </div><!-- end footer>inner -->
    </div><!-- end footer -->

    </div> <!-- end canvas -->
    """;
    $this->print_wrapper_end();
    """</html>""";
}

##===============================
## Custom CSS
##===============================

function Page::print_entry(Entry e){

    $e->print_wrapper_start();
    """<div class="header">\n""";
    """<div class="inner">\n""";
    """<div class="subjecttime-wrapper">\n""";
    $e->print_subject();
    """<div class="metatime">\n""";
    $e->print_metatypes();
    $e->print_time();
    """</div>\n""";
    """</div>\n""";
    $e->print_userpic();
    $e->print_poster();
    """</div>\n""";
    """</div>\n""";
    """<div>\n""";
    """<div class="contents">\n""";
    """<div class="inner">\n""";
    if ($*entry_metadata_position == "top") { $e->print_metadata(); }
    $e->print_text();
    if ($*entry_metadata_position == "bottom") { $e->print_metadata(); }
    $e->print_tags();
    """</div>\n""";
    """</div>\n""";
    """</div>\n""";

    """<div class="footer">\n""";
    """<div class="inner">\n""";
    $this->print_entry_footer($e);
    "</div>\n</div>\n";

    $e->print_wrapper_end();

}

function EntryPage::print_comment (Comment c) {

    $c->print_wrapper_start();
    """<div class="header">\n""";
    """<div class="inner">\n""";
    """<div class="subjecttime-wrapper">\n""";
    $c->print_subject();
    $c->print_metatypes();
    $c->print_time();
     if ( $c.comment_posted ) {
         print safe "<div class='comment-posted'>$*text_comment_posted</div>";
     }
    """</div>\n""";
    $c->print_userpic();
    $c->print_poster();
    $c->print_metadata();
    """</div>\n""";
    """</div>\n""";
    """<div class="contents">\n""";
    """<div class="inner">\n""";
    $c->print_text();
    if ($this.multiform_on) {
        """<span class="multiform-checkbox">""";
        print safe " <label for='ljcomsel_$c.talkid'>$*text_multiform_check</label> ";
        $c->print_multiform_check();
    "</span>";
    }
    """</div>\n""";
    """</div>\n""";
    """<div class="footer">\n""";
    """<div class="inner">\n""";
    $c->print_management_links();
    $c->print_interaction_links();
    $c->print_reply_container();
    "</div>\n</div>\n";
    $c->print_wrapper_end();

}

function ReplyPage::print_comment (Comment c) {

    $c->print_wrapper_start();
    """<div class="header">\n""";
    """<div class="inner">\n""";
    """<div class="subjecttime-wrapper">\n""";
    $c->print_subject();
    $c->print_metatypes();
    $c->print_time();
     if ( $c.comment_posted ) {
         print safe "<div class='comment-posted'>$*text_comment_posted</div>";
     }
    """</div>\n""";
    $c->print_userpic();
    $c->print_poster();
    $c->print_metadata();
    """</div>\n""";
    """</div>\n""";
    """<div class="contents">\n""";
    """<div class="inner">\n""";
    $c->print_text();
    """</div>\n""";
    """</div>\n""";
    """<div class="footer">\n""";
    """<div class="inner">\n""";
    $c->print_management_links();
    $c->print_interaction_links();
    $c->print_reply_container();
    "</div>\n</div>\n";
    $c->print_wrapper_end();

}

function print_secondary_cloud_tags(TagDetail[] tagslist, string{} opts) "Prints out a list of tags. Takes as arguments the taglist and a hash with optional arguments 'list-class' and 'item-class'. 'print_uses' option can be 'number', 'text' or 'title' to determine whether to display the uses as a number, as full text, or in the link title. It defaults to full text"
{
    var string list_class = $opts{"list-class"} ? """class="$opts{"list-class"}" """ : "";
    var string item_class = $opts{"item-class"} ? $opts{"item-class"} : "";
    var string print_uses = $opts{"print_uses"} ? $opts{"print_uses"} : "text";
    if (size $tagslist) {
        println """<ul $list_class>""";

        foreach var TagDetail t ($tagslist) {
            var string tag_class = """class="visibility-$t.visibility $item_class" """;
            if ($print_uses == "title") {
                var string uses = get_plural_phrase($t.use_count, "text_tag_uses");
                println """<li $tag_class><a href="$t.url" title="$uses">$t.name</a></li>\n""";
            } elseif ($print_uses == "number") {
                println """<li $tag_class ><a rel="tag" href="$t.url">$t.name</a> [$t.use_count]</li>\n""";
            } else {
                var string uses = get_plural_phrase($t.use_count, "text_tag_uses");
                 println """<li $tag_class>""";
                 println """<a rel="tag" href="$t.url" title="$uses">$t.name</a> """;
                 println """<span class ="invisible">$uses</span></li>\n""";
            }
        }
        println """</ul>""";
    }
}

function print_module_tags() {
    var Page p = get_page();
    var string title = "";
    var TagDetail[] tags = $p->visible_tag_list($*module_tags_opts_limit);
    if ($*module_tags_opts_limit == 0) {
       $title = $*text_module_tags;
    }
    else {
       $title = $*text_module_popular_tags;
    }
    if (size($tags) < 1) {
        return;
    }
    elseif ($*module_tags_opts_type == "multi" and $*module_tags_section =="two") {
        open_module("tags_multilevel", $title, $p.view_url{"tags"});
        print_multilevel_tags($tags, { "list-class" => "module-list", "item-class" => "module-list-item", "print_uses" => $*module_tags_opts_count_type });
        print_tag_manage_link();
        close_module();
    }
    elseif ($*module_tags_opts_type == "" and $*module_tags_section =="two") {
        open_module("tags_list", $title, $p.view_url{"tags"});
        print_list_tags($tags, { "list-class" => "module-list", "item-class" => "module-list-item", "print_uses" => $*module_tags_opts_count_type });
        print_tag_manage_link();
        close_module();
    }
    elseif ($*module_tags_opts_type == "cloud" and $*module_tags_section =="two") {
        open_module("tags_cloud", $title, $p.view_url{"tags"});
        print_cloud_tags($tags, { "list-class" => "module-list", "item-class" => "module-list-item", "print_uses" => $*module_tags_opts_count_type });
        print_tag_manage_link();
        close_module();
    }
    else{
        open_module("tags_cloud", $title, $p.view_url{"tags"});
        print_secondary_cloud_tags($tags, { "list-class" => "module-list", "item-class" => "module-list-item", "print_uses" => $*module_tags_opts_count_type });
        print_tag_manage_link();
        close_module();
    }
}

propgroup customcss {
    property use external_stylesheet;
    property use include_default_stylesheet;
    property use linked_stylesheet;
    property use custom_css;
}

function Page::print_default_stylesheet() {
    var string medium_media_query = generate_medium_media_query();
    var string large_media_query = generate_large_media_query();

    var string page_background = generate_background_css ($*image_background_page_url, $*image_background_page_repeat, $*image_background_page_position, $*color_page_background);
    var string header_background = generate_background_css ($*image_background_header_url, $*image_background_header_repeat, $*image_background_header_position, $*color_header_background);
    if ($*image_background_header_height > 0) {
        $header_background = """
            $header_background
            height: """ + $*image_background_header_height + """px;""";
    }

    var string canvas_background = generate_background_css ($*image_background_canvas_url, $*image_background_canvas_repeat, $*image_background_canvas_position, $*color_canvas_background);
    var string footer_link_colors = generate_color_css( $*color_footer_link, new Color, new Color );
    var string footer_link_active_colors = generate_color_css( $*color_footer_link_active, new Color, new Color );
    var string footer_link_hover_colors = generate_color_css( $*color_footer_link_hover, new Color, new Color );
    var string footer_link_visited_colors = generate_color_css( $*color_footer_link_visited, new Color, new Color );

    var string module_background = generate_background_css ($*image_background_module_url, $*image_background_module_repeat, $*image_background_module_position, $*color_module_background);
    
    $*image_metadata_location = generate_image_url($*image_metadata_location);
    $*image_metadata_mood = generate_image_url($*image_metadata_mood);
    $*image_metadata_music = generate_image_url($*image_metadata_music);
    $*image_metadata_groups = generate_image_url($*image_metadata_groups);
    $*image_metadata_xpost = generate_image_url($*image_metadata_xpost);
    $*image_entry_tag = generate_image_url($*image_entry_tag);
    $*image_list_bullet = generate_image_url($*image_list_bullet);
    $*image_module_list_bullet = generate_image_url($*image_module_list_bullet);

    var string page_colors = generate_color_css($*color_page_text, $*color_page_background, $*color_page_border);
    var string entry_colors = generate_color_css($*color_entry_text, $*color_entry_background, $*color_entry_border);
    var string module_colors = generate_color_css($*color_module_text, $*color_module_background, $*color_module_border);

    var string page_title_colors = generate_color_css($*color_page_title, new Color, new Color);
    var string entry_title_colors = generate_color_css($*color_entry_title, new Color, new Color);
    var string comment_title_colors = generate_color_css($*color_comment_title, new Color, new Color);
    var string module_title_colors = generate_color_css($*color_module_title, $*color_module_title_background, new Color);

    var string page_link_colors = generate_color_css($*color_page_link, new Color, new Color);
    var string page_link_active_colors = generate_color_css($*color_page_link_active, new Color, new Color);
    var string page_link_hover_colors = generate_color_css($*color_page_link_hover, new Color, new Color);
    var string page_link_visited_colors = generate_color_css($*color_page_link_visited, new Color, new Color);

    var string entry_link_colors = generate_color_css($*color_entry_link, new Color, new Color);
    var string entry_link_active_colors = generate_color_css($*color_entry_link_active, new Color, new Color);
    var string entry_link_hover_colors = generate_color_css($*color_entry_link_hover, new Color, new Color);
    var string entry_link_visited_colors = generate_color_css($*color_entry_link_visited, new Color, new Color);
    var string entry_interaction_link_colors = generate_color_css($*color_entry_interaction_links, new Color, new Color);
    var string entry_interaction_link_active_colors = generate_color_css($*color_entry_interaction_links_active, new Color, new Color);
    var string entry_interaction_link_hover_colors = generate_color_css($*color_entry_interaction_links_hover, new Color, new Color);
    var string entry_interaction_link_visited_colors = generate_color_css($*color_entry_interaction_links_visited, new Color, new Color);

    var string module_link_colors = generate_color_css($*color_module_link, new Color, new Color);
    var string module_link_active_colors = generate_color_css($*color_module_link_active, new Color, new Color);
    var string module_link_hover_colors = generate_color_css($*color_module_link_hover, new Color, new Color);
    var string module_link_visited_colors = generate_color_css($*color_module_link_visited, new Color, new Color);

    var string page_font = generate_font_css("", $*font_base, $*font_fallback, $*font_base_size, $*font_base_units);
    var string page_title_font = generate_font_css($*font_journal_title, $*font_base, $*font_fallback, $*font_journal_title_size, $*font_journal_title_units);
    var string page_subtitle_font = generate_font_css($*font_journal_subtitle, $*font_base, $*font_fallback, $*font_journal_subtitle_size, $*font_journal_subtitle_units);
    var string page_pagetitle_font = generate_font_css($*font_journal_pagetitle, $*font_base, $*font_fallback, $*font_journal_pagetitle_size, $*font_journal_pagetitle_units);
    var string entry_title_font = generate_font_css($*font_entry_title, $*font_base, $*font_fallback, $*font_entry_title_size, $*font_entry_title_units);
    var string entry_datetime_font = generate_font_css($*font_entry_datetime, $*font_base, $*font_fallback, $*font_entry_datetime_size, $*font_entry_datetime_units);
    var string comment_title_font = generate_font_css($*font_comment_title, $*font_base, $*font_fallback, $*font_comment_title_size, $*font_comment_title_units);
    var string module_font = generate_font_css($*font_module_text, $*font_base, $*font_fallback, $*font_module_text_size, $*font_module_text_units);
    var string module_title_font = generate_font_css($*font_module_heading, $*font_base, $*font_fallback, $*font_module_heading_size, $*font_module_heading_units);
    var string entry_management_font = generate_font_css($*font_entry_management, $*font_base, $*font_fallback, $*font_entry_management_size, $*font_entry_management_units);
    var string module_management_font = generate_font_css($*font_module_management, $*font_base, $*font_fallback, $*font_module_management_size, $*font_module_management_units);
    var string navigation_font = generate_font_css($*font_navigation, $*font_base, $*font_fallback, $*font_navigation_size, $*font_navigation_units);
    var string linkslist_font = generate_font_css($*font_linkslist, $*font_base, $*font_fallback, $*font_linkslist_size, $*font_linkslist_units);

    var string topnav_display = "";
         if ($*topnav_show == false) {
            $topnav_display = """
            .topnav {
                 display:none;
            }
            """;
         }

    var string entry_header_padding = "";
    if ( $*entry_userpic_style == "" ) { $entry_header_padding = "101px"; }
    elseif ( $*entry_userpic_style == "small" ) { $entry_header_padding = "76px"; }
    elseif ( $*entry_userpic_style == "smaller" ) { $entry_header_padding = "51px"; }

    var string comment_header_padding = "";
    if ( $*comment_userpic_style == "" ) { $comment_header_padding = "100px"; }
    elseif ( $*comment_userpic_style == "small" ) { $comment_header_padding = "75px"; }
    elseif ( $*comment_userpic_style == "smaller" ) { $comment_header_padding = "50px"; }

    var string entry_metatag_css = "";
         if ($*metadata_label_images) {
             $entry_metatag_css = """
             .tag ul li:before{
                 padding-right: 2px;
                 content: url($*image_entry_tag);
             }

             .tag-text{
                 display:none;
             }

             .metadata-label{
                 display:none;
             }

             #metadata-mood:before{
                 content:url($*image_metadata_mood);
                 padding-right:2px;
             }

             .metadata-item-location:before{
                 content:url($*image_metadata_location);
                 padding-right:2px;
             }

             .metadata-item-music:before {
                 content:url($*image_metadata_music);
                 padding-right:2px;
             }

             .metadata-item-groups:before {
                 content:url($*image_metadata_groups);
                 padding-right:2px;
             }

             .metadata-item-xpost:before {
                 content:url($*image_metadata_xpost);
                 padding-right:2px;
             }
             """;
         }

    var string controlstrip_css = "";
         if ($*custom_control_strip_colors == "on_gradient" or $*custom_control_strip_colors == "on_no_gradient") {
         $controlstrip_css = """
             #lj_controlstrip div {
                 border:none;
             }

             #lj_controlstrip input{
                 background:$*control_strip_bgcolor;
                 border:1px solid $*control_strip_bordercolor;
                 font-weight:bold;
                 color:$*control_strip_fgcolor;
             }

             #lj_controlstrip_userpic img{
                 border-radius:50%;
                -webkit-border-radius:50%;
             }
             """;
         }


    print_custom_control_strip_css();

    """
body {
  $page_font
  $page_background
  $page_colors
}

a, a:link {
  $page_link_colors
}

a:visited {
  $page_link_visited_colors
}

a:active {
  $page_link_active_colors
}

a:hover {
  $page_link_hover_colors
}

#canvas {
  width: $*primary_width_size$*primary_width_units;
  max-width: 100%;
  margin: 0 auto;
  border-left: 1px $*color_page_border solid;
  border-right: 1px $*color_page_border solid;
  $canvas_background
}

#header {
  position: relative;
}

#header:after {
  content: "";
  display: block;
  padding-top: 33%;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  $header_background
}

#header > .inner {
  height: 60px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
}

#header .module-wrapper {
  width: 100%;
}

h1#title {
  $page_title_colors
  $page_title_font
  margin: 0;
  padding: 0;
  font-weight: bold;
  order: 1;
}

h1#title a {
  $page_title_colors
  text-decoration: none;
}

h2#subtitle,
h2#pagetitle {
  font-weight: normal;
  margin: 0;
  padding: 0;
}

h2#pagetitle {
  $page_subtitle_font
  $page_title_colors
  order: 2;
}

h2#subtitle {
  $page_subtitle_font
  order: 3;
  width: 100%;
}

#primary {
  width: 100%;
  border-top: 1px #000 solid;
  padding-top: 10px;
}

#primary > .inner:first-child {
  padding: 0;
}

.entry {
  border-bottom: 1px $*color_entry_border solid;
  position: relative;
  padding: 10px;
  padding-left: 70px;
  padding-top: calc(1.4em + 10px);
  position: relative;
}

.entry .header > .inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.entry .header .datetime {
  opacity: .6;
  position: absolute;
  top: 1.4em;
  right: 10px;
}

.entry h3 {
  font-weight: bold;
  font-size: 1em;
  margin: 0;
  padding: 0;
}

.entry .userpic {
  width: 40px;
  height: 40px;
  border-radius: 100%;
  overflow: hidden;
  position: absolute;
  top: 1.4em;
  left: 10px;
}

.entry .poster {
  position: absolute;
  top: 1.4em;
  left: 60px;
}

.entry .userpic img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.entry .footer {
  width: calc(100% + 60px);
  transform: translateX(-55px);
  margin-top: 1em;
}

.userlite-interaction-links {
  display: inline-flex;
  list-style: none;
  gap: 10px;
  padding: 0;
}

.module-section-one,
.module-section-two {
  padding: 10px;
}

.module-section-two > .inner {
  columns: 2;
  gap: 10px;
}

.module-section-two .module {
  break-inside: avoid;
}

.module-section-header .module-navlinks {
  position: absolute;
  top: 100%;
  right: 10px;
  z-index: 9;
  max-width: calc(100% - 140px);
  text-align: right;
}

.module-section-one .module-navlinks,
.module-section-two .module-navlinks {
  display: inline-flex;
  list-style: none;
  gap: 10px;
  padding: 0;
}

.module-section-header .module-navlinks .module-content li {
  padding: 0;
}

.module {
  margin-bottom: 1em;
}

.module:last-child {
  margin-bottom: 0;
}

.module h2 {
  font-size: 1em;
  font-weight: bold;
  margin: 0;
  padding: 0;
}

.module-userprofile {
  position: relative;
  padding-top: 60px;
}

.module-userprofile .userpic {
  position: absolute;
  top: 0;
  left: 0;
  transform: translateY(-60%);
  border: 3px #FFF solid;
  border-radius: 100%;
  overflow: hidden;
}

""";
}
